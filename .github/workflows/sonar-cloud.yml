# https://github.com/SonarSource/sonarcloud-github-action
name: SonarCloud

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths-ignore:
      - ".github/workflows/**"
      - "**/*.md"
      - "**/*.yml"

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          check-latest: true
          distribution: "sapmachine"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud Packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build, Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"ASP.NET-Core-API-DDD-SOLID" /o:"jeangatto" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /s:$GITHUB_WORKSPACE/src/SonarQube.Analysis.xml /d:sonar.host.url="https://sonarcloud.io" /d:sonar.verbose=false /d:sonar.scanner.scanAll=false /d:sonar.dotnet.excludeTestProjects=true /d:sonar.scanner.skipJreProvisioning=true
          dotnet restore SGP.sln
          dotnet build SGP.sln --no-restore
          dotnet test SGP.sln --no-build --no-restore --verbosity minimal -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=TestResults/
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
